{{- config.AddGeneratedFilesToVSProject = false
capture output 
      types_type =  data.Classes | Symbols.WhereNamespaceStartsWith "NetArchTest.Rules" | Symbols.WhereNameMatches "^Types$"
      predicate_type =  data.Classes | Symbols.WhereNamespaceStartsWith "NetArchTest.Rules" | Symbols.WhereNameMatches "^Predicate" 
      condition_type =  data.Classes | Symbols.WhereNamespaceStartsWith "NetArchTest.Rules" | Symbols.WhereNameMatches "^Condition"
      testresult_type =  data.Classes | Symbols.WhereNamespaceStartsWith "NetArchTest.Rules" | Symbols.WhereNameMatches "^TestResult" 
      itype_type =  data.Interfaces | Symbols.WhereNamespaceStartsWith "NetArchTest.Rules" | Symbols.WhereNameMatches "^IType"
      iassembly_type =  data.Interfaces | Symbols.WhereNamespaceStartsWith "NetArchTest.Rules" | Symbols.WhereNameMatches "^IAssembly"
      options_type =  data.Classes | Symbols.WhereNamespaceStartsWith "NetArchTest.Rules" | Symbols.WhereNameMatches "^Options"
      
      all_types = types_type | Array.Concat predicate_type | Array.Concat condition_type | Array.Concat testresult_type | Array.Concat itype_type | Array.Concat iassembly_type | Array.Concat options_type
}}    


{{- for type in all_types }}
## {{ type.Name }}

  {{- for method in type.Methods | Symbols.ThatArePublic | Symbols.ThatAreStatic   | Array.Sort "Name" }}
- [{{method.Name}}](#{{type.BareName}}{{method.BareName}})
  {{- end }}
  {{~ for method in type.Methods | Symbols.ThatArePublic | Symbols.ThatAreNotStatic   | Array.Sort "Name" }}
* [{{method.Name}}](#{{type.BareName}}{{method.BareName}})
  {{- end }}
  {{- for prop in type.Properties | Symbols.ThatArePublic | Symbols.ThatAreNotStatic   | Array.Sort "Name" }}
* [{{prop.Name}}](#{{type.BareName}}{{prop.BareName}})
  {{- end }}
{{ end}}



{{- for type in all_types }}
## {{ type.Name }}

  {{- for method in type.Methods | Symbols.ThatArePublic  | Array.Sort "Name" }}
### {{type.BareName}}.{{method.Name}}
```csharp
{{method.FullName}}
```
{{ method.DocComment.Summary | String.StripNewlines }}
  {{- end }}
 
  {{- for prop in type.Properties | Symbols.ThatArePublic | Symbols.ThatAreNotStatic   | Array.Sort "Name" }}
### {{type.BareName}}.{{prop.Name}}
```csharp
{{prop.FullName}}
```
  {{~ prop.DocComment.Summary | String.StripNewlines }}
  {{- end }}
{{ end}}

 


    
{{   
    end
    Save output "api.md"
-}}